apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cert-manager-crds
  namespace: cert-manager
spec:
  interval: 5m
  chart:
    spec:
      chart: cert-manager
      version: v1.14.1
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  # Встановлюємо тільки CRDs, без основних компонентів
  values:
    installCRDs: true
    # Відключаємо всі інші компоненти, залишаємо тільки CRDs
    webhook:
      enabled: false
    cainjector:
      enabled: false
    controller:
      enabled: false
  # Важливо: цей HelmRelease має бути встановлений першим
  dependsOn: []

---

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  interval: 5m
  chart:
    spec:
      chart: cert-manager
      version: v1.14.1
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  # Чекаємо поки CRDs будуть встановлені
  dependsOn:
    - name: cert-manager-crds
      namespace: cert-manager
  values:
    # CRDs вже встановлені окремо
    installCRDs: false
    # Налаштування для ingress-shim (автоматичне створення сертифікатів)
    ingressShim:
      defaultIssuerKind: "ClusterIssuer"
      defaultIssuerName: "letsencrypt-prod"
  # Додаткові налаштування для правильної роботи
  postRenderers:
    - kustomize:
        patches:
          # Додаємо лейбл до namespace (аналог kubectl label у твоєму helmfile)
          - target:
              kind: Namespace
              name: cert-manager
            patch: |
              - op: add
                path: /metadata/labels/cert-manager.io~1disable-validation
                value: "true"