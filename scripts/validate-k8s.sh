#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è k8s —Ç–∞ Helm —Ñ–∞–π–ª—ñ–≤
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./scripts/validate-k8s.sh

set -e

echo "üöÄ –ü–æ—á–∏–Ω–∞—î–º–æ –≤–∞–ª—ñ–¥–∞—Ü—ñ—é Kubernetes —Ç–∞ Helm –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π..."

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'  
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–æ–º–∞–Ω–¥–∏
check_command() {
    if ! command -v $1 &> /dev/null; then
        echo -e "${RED}‚ùå $1 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å $1 —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.${NC}"
        exit 1
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
echo -e "${BLUE}üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤...${NC}"
check_command "kubectl"
check_command "helm" 
check_command "yamllint"

echo -e "${GREEN}‚úÖ –£—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω–æ${NC}"

# 1. YAML Syntax Check
echo -e "${BLUE}üìù –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å YAML —Ñ–∞–π–ª—ñ–≤...${NC}"
YAML_ERRORS=0

find clusters/ -name "*.yaml" -o -name "*.yml" | while read file; do
    if yamllint "$file" -c .yamllint.yml > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ $file${NC}"
    else
        echo -e "${RED}‚ùå $file –º–∞—î –ø–æ–º–∏–ª–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É${NC}"
        yamllint "$file" -c .yamllint.yml
        ((YAML_ERRORS++))
    fi
done

# 2. Kubernetes Validation
echo -e "${BLUE}üéØ –í–∞–ª—ñ–¥—É—î–º–æ Kubernetes –º–∞–Ω—ñ—Ñ–µ—Å—Ç–∏...${NC}"
K8S_ERRORS=0

find clusters/ -name "*.yaml" -o -name "*.yml" | while read file; do
    echo -n "–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ $file... "
    if kubectl --dry-run=client apply -f "$file" --validate=true > /dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ${NC}"
    else
        echo -e "${RED}‚ùå${NC}"
        kubectl --dry-run=client apply -f "$file" --validate=true
        ((K8S_ERRORS++))
    fi
done

# 3. Helm Release Validation  
echo -e "${BLUE}‚öì –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Helm releases...${NC}"
HELM_ERRORS=0

find clusters/ -name "*helmrelease*.yaml" | while read file; do
    echo -e "${YELLOW}üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ Helm release: $file${NC}"
    # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à —Å–∫–ª–∞–¥–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, –∫–æ–ª–∏ Helm chart –¥–æ—Å—Ç—É–ø–Ω–∏–π
done

# 4. Flux Validation (—è–∫—â–æ flux –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)
if command -v flux &> /dev/null; then
    echo -e "${BLUE}üåä –í–∞–ª—ñ–¥—É—î–º–æ Flux –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...${NC}"
    
    find clusters/ -name "kustomization.yaml" | while read file; do
        dir=$(dirname "$file")
        echo -n "–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Flux kustomization –≤ $dir... "
        if flux build kustomization --name=test --source=GitRepository/test --path="$dir" --dry-run > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è${NC}"
        fi
    done
else
    echo -e "${YELLOW}‚ö†Ô∏è  Flux CLI –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ Flux –≤–∞–ª—ñ–¥–∞—Ü—ñ—é${NC}"
fi

# 5. Security Scanning (—è–∫—â–æ Polaris –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)
if command -v polaris &> /dev/null; then
    echo -e "${BLUE}üîí –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑ Polaris...${NC}"
    polaris audit --audit-path clusters/ --format pretty > polaris-results.txt
    echo -e "${GREEN}‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É polaris-results.txt${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Polaris –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏${NC}"
fi

echo -e "${GREEN}üéâ –í–∞–ª—ñ–¥–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"

# –ü—ñ–¥—Å—É–º–æ–∫
echo ""
echo -e "${BLUE}üìä –ü—ñ–¥—Å—É–º–æ–∫:${NC}"
if [ $YAML_ERRORS -eq 0 ] && [ $K8S_ERRORS -eq 0 ] && [ $HELM_ERRORS -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –£—Å—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!${NC}"
    exit 0
else
    echo -e "${RED}‚ùå –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ–º–∏–ª–∫–∏. –ü–µ—Ä–µ–≥–ª—è–Ω—å –≤–∏–≤—ñ–¥ –≤–∏—â–µ.${NC}"
    exit 1
fi
